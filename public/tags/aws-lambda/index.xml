<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws-Lambda on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/aws-lambda/</link>
    <description>Recent content in Aws-Lambda on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sun, 07 Feb 2021 19:47:50 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/aws-lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up a Python Lambda to Trigger on DynamoDB Streams via the AWS CLI</title>
      <link>http://localhost:1313/blog/setting-up-a-python-lambda-to-trigger-on-dynamodb-streams-via-the-aws-cli/</link>
      <pubDate>Sun, 07 Feb 2021 19:47:50 +0000</pubDate>
      <guid>http://localhost:1313/blog/setting-up-a-python-lambda-to-trigger-on-dynamodb-streams-via-the-aws-cli/</guid>
      <description>&lt;p&gt;DynamoDB streams record information about what has changed in a DynamoDB table, and AWS lambdas are ways to run code without managing servers yourself. DynamoDB streams also have an integration with AWS Lambdas so that any change to a DynamoDB table can be processed by an AWS Lambda&amp;ndash;still without worrying about keeping your servers up or maintaining them. That is the subject of this post.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic Python Lambda Function Uploads using the AWS CLI</title>
      <link>http://localhost:1313/blog/basic-python-lambda-function-uploads-using-the-aws-cli/</link>
      <pubDate>Sat, 06 Feb 2021 21:07:12 +0000</pubDate>
      <guid>http://localhost:1313/blog/basic-python-lambda-function-uploads-using-the-aws-cli/</guid>
      <description>&lt;p&gt;AWS Lambda functions were the first &amp;quot;serverless&amp;quot; way to run code. Of course, there are still servers, but the point is that you can nearly forget about managing those servers and all of that is owned by AWS.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
