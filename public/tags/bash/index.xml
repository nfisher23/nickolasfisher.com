<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bash on Nick Fisher's tech blog</title><link>https://www.nickolasfisher.com/tags/bash/</link><description>Recent content in Bash on Nick Fisher's tech blog</description><generator>Hugo</generator><language>en-US</language><copyright>2018-{year}</copyright><lastBuildDate>Sat, 01 Aug 2020 20:46:28 +0000</lastBuildDate><atom:link href="https://www.nickolasfisher.com/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>How to use Optimistic Locking in DynamoDB via the AWS CLI</title><link>https://www.nickolasfisher.com/blog/how-to-use-optimistic-locking-in-dynamodb-via-the-aws-cli/</link><pubDate>Sat, 01 Aug 2020 20:46:28 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-use-optimistic-locking-in-dynamodb-via-the-aws-cli/</guid><description>&lt;p>Optimistic Locking is a form of concurrency control that basically aims to prevent two different threads from accidentally overwriting data that another thread has already written. I covered &lt;a href="https://nickolasfisher.com/blog/Optimistic-Locking-in-MySQLExplain-Like-Im-Five">optimistic locking in MySQL&lt;/a> in a previous blog post, which may or may not be easier to understand based on your background.&lt;/p></description></item><item><title>How to Create a Digital Ocean Droplet using Terraform</title><link>https://www.nickolasfisher.com/blog/how-to-create-a-digital-ocean-droplet-using-terraform/</link><pubDate>Sun, 17 May 2020 18:26:02 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-create-a-digital-ocean-droplet-using-terraform/</guid><description>&lt;p>The source code for this post can be found &lt;a href="https://github.com/nfisher23/digitalocean-terraform-examples">on Github&lt;/a>.&lt;/p>
&lt;p>Terraform lets you define your infrastructure, e.g. a virtual machine, in code. Used properly, this saves you a lot of time, makes infra easier to manage, and will generally limit your ability to do something dumb, like delete or modify something your infrastructure is dependent on.&lt;/p></description></item><item><title>A Simple Zero Downtime Continuous Integration Pipeline for Spring MVC</title><link>https://www.nickolasfisher.com/blog/a-simple-zero-downtime-continuous-integration-pipeline-for-spring-mvc/</link><pubDate>Sun, 25 Nov 2018 15:53:22 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/a-simple-zero-downtime-continuous-integration-pipeline-for-spring-mvc/</guid><description>&lt;p>The sample code associated with what follows can be found &lt;a href="https://github.com/nfisher23/simple-cicd-pipeline-with-spring">on GitHub&lt;/a>.&lt;/p>
&lt;p>One of the biggest paradigm shifts in software engineering, since the invention of the computer and software that would run on it, was the idea of a MVR (minimum viable release) or MVP (minimum viable product). With the lack of internet access becoming the exception in developed countries, it becomes more and more powerful to put your product out there on display, and to design a way to continuously make improvements to it. In the most aggressive of circumstances, you want to be able to push something up to a source control server, then let an automated process perform the various steps required to actually deploy it in the real world. In the best case, you can achieve all of this with zero downtime&amp;ndash;basically, the users of your service are never inconvenienced by your decision to make a change. Setting up one very simple example of that is the subject of this post.&lt;/p></description></item><item><title>How to Set Up a Local Unsecured Postgres Virtual Machine (for testing)</title><link>https://www.nickolasfisher.com/blog/how-to-set-up-a-local-unsecured-postgres-virtual-machine-for-testing/</link><pubDate>Sat, 24 Nov 2018 12:47:47 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-set-up-a-local-unsecured-postgres-virtual-machine-for-testing/</guid><description>&lt;p>The sample code for this post can be found &lt;a href="https://github.com/nfisher23/integration-testing-postgres-and-spring/tree/master/postgres-vm-sandbox">on GitHub&lt;/a>.&lt;/p>
&lt;p>While we can always install &lt;a href="https://www.postgresql.org/">PostgreSQL&lt;/a> on our host machine, it&amp;rsquo;s a much cleaner solution to create something like a local virtual machine with &lt;a href="https://www.vagrantup.com/">Vagrant&lt;/a> or a container using &lt;a href="https://www.docker.com/">Docker.&lt;/a> That way, any changes we make to the database and then forget about are not around as soon as we destroy either the container or the virtual machine. It is one more way to tighten that feedback loop we need as developers.&lt;/p></description></item><item><title>A VagrantFile for Elasticsearch, Logstash, and Kibana (On Three Different Servers)</title><link>https://www.nickolasfisher.com/blog/a-vagrantfile-for-elasticsearch-logstash-and-kibana-on-three-different-servers/</link><pubDate>Sun, 18 Nov 2018 13:42:46 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/a-vagrantfile-for-elasticsearch-logstash-and-kibana-on-three-different-servers/</guid><description>&lt;p>&lt;a href="https://www.elastic.co/">Elasticsearch, Logstash, and Kibana&lt;/a>, commonly referred to as ELK or the Elastic Stack, is a set of tools that can, well do a lot of things. It is most famous for its logging and analytics capabilities.&lt;/p></description></item><item><title>How to Provision a Linux Server With Any Version of Java via a Bash Script</title><link>https://www.nickolasfisher.com/blog/how-to-provision-a-linux-server-with-any-version-of-java-via-a-bash-script/</link><pubDate>Sun, 28 Oct 2018 14:29:38 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-provision-a-linux-server-with-any-version-of-java-via-a-bash-script/</guid><description>&lt;p>While we would all like to be up to date, sometimes legacy systems handcuff us into using an older version of software. Java is no exception, and in some cases we
have to resort to using, say, Java 8, instead of the latest version with all of the security updates that we need.&lt;/p></description></item></channel></rss>