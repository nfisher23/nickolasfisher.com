<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BashDevOpsawsdynamodb on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/bashdevopsawsdynamodb/</link>
    <description>Recent content in BashDevOpsawsdynamodb on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sat, 01 Aug 2020 20:46:28 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/bashdevopsawsdynamodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use Optimistic Locking in DynamoDB via the AWS CLI</title>
      <link>http://localhost:1313/blog/how-to-use-optimistic-locking-in-dynamodb-via-the-aws-cli/</link>
      <pubDate>Sat, 01 Aug 2020 20:46:28 +0000</pubDate>
      <guid>http://localhost:1313/blog/how-to-use-optimistic-locking-in-dynamodb-via-the-aws-cli/</guid>
      <description>&lt;p&gt;Optimistic Locking is a form of concurrency control that basically aims to prevent two different threads from accidentally overwriting data that another thread has already written. I covered &lt;a href=&#34;https://nickolasfisher.com/blog/Optimistic-Locking-in-MySQLExplain-Like-Im-Five&#34;&gt;optimistic locking in MySQL&lt;/a&gt; in a previous blog post, which may or may not be easier to understand based on your background.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
