<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Digital Ocean on Nick Fisher's tech blog</title><link>https://www.nickolasfisher.com/tags/digital-ocean/</link><description>Recent content in Digital Ocean on Nick Fisher's tech blog</description><generator>Hugo</generator><language>en-US</language><copyright>2018-{year}</copyright><lastBuildDate>Sun, 17 May 2020 21:58:17 +0000</lastBuildDate><atom:link href="https://www.nickolasfisher.com/tags/digital-ocean/index.xml" rel="self" type="application/rss+xml"/><item><title>How To Create a Kubernetes Cluster on Digital Ocean using Terraform</title><link>https://www.nickolasfisher.com/blog/how-to-create-a-kubernetes-cluster-on-digital-ocean-using-terraform/</link><pubDate>Sun, 17 May 2020 21:58:17 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-create-a-kubernetes-cluster-on-digital-ocean-using-terraform/</guid><description>&lt;p>The source code for this post can be found &lt;a href="https://github.com/nfisher23/digitalocean-terraform-examples/tree/master/kubernetes">on Github&lt;/a>.&lt;/p>
&lt;p>Kubernetes has democratized the cloud more than any piece of software before or since. What used to be proprietary APIs by AWS, Azure, or GCP for things like auto scaling groups, load balancers, or virtual machines is now abstracted away behind never ending yaml configuration. Combine this wonderful abstraction with the pricing model of &lt;a href="https://www.digitalocean.com/">Digital Ocean&lt;/a> and you&amp;rsquo;ve got all the makings of a developer party.&lt;/p></description></item><item><title>How to Create a Digital Ocean Droplet using Terraform</title><link>https://www.nickolasfisher.com/blog/how-to-create-a-digital-ocean-droplet-using-terraform/</link><pubDate>Sun, 17 May 2020 18:26:02 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-create-a-digital-ocean-droplet-using-terraform/</guid><description>&lt;p>The source code for this post can be found &lt;a href="https://github.com/nfisher23/digitalocean-terraform-examples">on Github&lt;/a>.&lt;/p>
&lt;p>Terraform lets you define your infrastructure, e.g. a virtual machine, in code. Used properly, this saves you a lot of time, makes infra easier to manage, and will generally limit your ability to do something dumb, like delete or modify something your infrastructure is dependent on.&lt;/p></description></item><item><title>How to Create Multiple Digital Ocean Droplets and Provision Them Using Ansible</title><link>https://www.nickolasfisher.com/blog/how-to-create-multiple-digital-ocean-droplets-and-provision-them-using-ansible/</link><pubDate>Sun, 16 Jun 2019 17:14:49 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-create-multiple-digital-ocean-droplets-and-provision-them-using-ansible/</guid><description>&lt;p>In a previous post, we saw &lt;a href="https://nickolasfisher.com/blog/How-To-Create-a-Digital-Ocean-Droplet-and-Provision-It-Using-Ansible">how to create a digital ocean droplet and provision it with Ansible&lt;/a>. Creating multiple droplets is very similar, you mostly just have to pay attention to the response object that you get back, which is different in the single vs. the many case.&lt;/p></description></item><item><title>How To Create a Digital Ocean Droplet and Provision It Using Ansible</title><link>https://www.nickolasfisher.com/blog/how-to-create-a-digital-ocean-droplet-and-provision-it-using-ansible/</link><pubDate>Sat, 15 Jun 2019 20:40:48 +0000</pubDate><guid>https://www.nickolasfisher.com/blog/how-to-create-a-digital-ocean-droplet-and-provision-it-using-ansible/</guid><description>&lt;p>Ansible allows you to provision servers in an idempotent fashion. It lets you see the state of your VM configuration as it resides in code, which is light years better than the sysadmin ways of yesterday.&lt;/p></description></item></channel></rss>