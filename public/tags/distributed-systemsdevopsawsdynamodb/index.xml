<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed SystemsDevOpsawsdynamodb on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/distributed-systemsdevopsawsdynamodb/</link>
    <description>Recent content in Distributed SystemsDevOpsawsdynamodb on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sun, 26 Jul 2020 21:54:59 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/distributed-systemsdevopsawsdynamodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DynamoDB Streams and Python: A Working Introduction</title>
      <link>http://localhost:1313/blog/dynamodb-streams-and-python-a-working-introduction/</link>
      <pubDate>Sun, 26 Jul 2020 21:54:59 +0000</pubDate>
      <guid>http://localhost:1313/blog/dynamodb-streams-and-python-a-working-introduction/</guid>
      <description>&lt;p&gt;DynamoDB Streams is AWS&#39;s home grown &lt;a href=&#34;https://en.wikipedia.org/wiki/Change_data_capture&#34;&gt;Change Data Capture [CDC]&lt;/a&gt; mechanism, which allows the consumer of the stream to see records probably in approximately the order they were created [it&#39;s basically impossible, at scale, to guarantee that all records across all partitions will somehow stream the data in exactly the same order that it was written]. This is a pretty fantastic feature because it allows us to reliably do &lt;em&gt;&amp;mdash;something&amp;mdash;&lt;/em&gt; after we add new data, update existing data, or delete existing data. As long as all the stream records are read and processed, we can ensure at least once processing on data changes and then go sleep soundly at night knowing that there is one less edge case in our application. Combine that with the natural scale that DynamoDB provides via its leaderless architecture and you can build this thing once and probably never have to worry about it handling more load ever again.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DynamoDB Basics: A Hands On Tutorial</title>
      <link>http://localhost:1313/blog/dynamodb-basics-a-hands-on-tutorial/</link>
      <pubDate>Sun, 12 Jul 2020 18:36:05 +0000</pubDate>
      <guid>http://localhost:1313/blog/dynamodb-basics-a-hands-on-tutorial/</guid>
      <description>&lt;p&gt;DynamoDB is a fully managed distributed datastore that does a great job of alleviating the operational overhead of building very scalable systems.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
