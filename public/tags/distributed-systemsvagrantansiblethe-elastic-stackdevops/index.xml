<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed Systemsvagrantansiblethe Elastic StackDevOps on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/distributed-systemsvagrantansiblethe-elastic-stackdevops/</link>
    <description>Recent content in Distributed Systemsvagrantansiblethe Elastic StackDevOps on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sun, 17 Mar 2019 23:27:43 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/distributed-systemsvagrantansiblethe-elastic-stackdevops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to do a Rolling Upgrade of Multiple Logstash Instances Using Ansible</title>
      <link>http://localhost:1313/blog/how-to-do-a-rolling-upgrade-of-multiple-logstash-instances-using-ansible/</link>
      <pubDate>Sun, 17 Mar 2019 23:27:43 +0000</pubDate>
      <guid>http://localhost:1313/blog/how-to-do-a-rolling-upgrade-of-multiple-logstash-instances-using-ansible/</guid>
      <description>&lt;p&gt;You can see the source code for this post &lt;a href=&#34;https://github.com/nfisher23/some-ansible-examples&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In a previous post on &lt;a href=&#34;https://nickolasfisher.com/blog/How-to-Provision-Multiple-Logstash-Hosts-Using-Ansible&#34;&gt;How to Provision Multiple Logstash Hosts Using Ansible&lt;/a&gt;, we saw that provisioning logstash is pretty straightforward. However, what do we do with it after it&#39;s been out there transforming messages this entire time? Given that elastic comes out with a new version of Logstash every fifteen or twenty minutes, a wise person would look to automate the upgrade process as soon as possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Provision Multiple Logstash Hosts Using Ansible</title>
      <link>http://localhost:1313/blog/how-to-provision-multiple-logstash-hosts-using-ansible/</link>
      <pubDate>Wed, 06 Mar 2019 23:33:35 +0000</pubDate>
      <guid>http://localhost:1313/blog/how-to-provision-multiple-logstash-hosts-using-ansible/</guid>
      <description>&lt;p&gt;The source code for this post can be found &lt;a href=&#34;https://github.com/nfisher23/some-ansible-examples&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;Logstash&lt;/a&gt; primarily exists to extract useful information out of plain-text logs. Most applications have custom logs which are in whatever format the person writing them thought would look reasonable&amp;hellip;usually to a human, and not to a machine. While countless future developer hours would be preserved if everything were just in JSON, that is sadly not even remotely the case, and in particular it&#39;s not the case for log files. Logstash aims to be the intermediary between the various log formats and Elasticsearch, which is the document database provided by Elastic as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Provision a Multi Node Elasticsearch Cluster Using Ansible</title>
      <link>http://localhost:1313/blog/how-to-provision-a-multi-node-elasticsearch-cluster-using-ansible/</link>
      <pubDate>Sun, 03 Mar 2019 23:15:27 +0000</pubDate>
      <guid>http://localhost:1313/blog/how-to-provision-a-multi-node-elasticsearch-cluster-using-ansible/</guid>
      <description>&lt;p&gt;You can see the sample code for this tutorial &lt;a href=&#34;https://github.com/nfisher23/some-ansible-examples&#34;&gt;on GitHub.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/products/elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt; is a distributed, NoSQL, document database, built on top of Lucene. There are so many things I could say about Elasticsearch, but instead I&#39;ll focus on how to install a simple 3-node cluster with an Ansible role. The following example will not have any security baked into it, so it&#39;s really just a starting point to get you up and running.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
