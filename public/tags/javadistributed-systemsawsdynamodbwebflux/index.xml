<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javadistributed Systemsawsdynamodbwebflux on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/javadistributed-systemsawsdynamodbwebflux/</link>
    <description>Recent content in Javadistributed Systemsawsdynamodbwebflux on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sat, 31 Oct 2020 22:49:54 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javadistributed-systemsawsdynamodbwebflux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Query a DynamoDB Local Secondary Index with Java</title>
      <link>http://localhost:1313/blog/query-a-dynamodb-local-secondary-index-with-java/</link>
      <pubDate>Sat, 31 Oct 2020 22:49:54 +0000</pubDate>
      <guid>http://localhost:1313/blog/query-a-dynamodb-local-secondary-index-with-java/</guid>
      <description>&lt;p&gt;DynamoDB&#39;s Local Secondary Indexes allow for more query flexibility than a traditional partition and range key combination. They are also the only index in DynamoDB where a strongly consistent read can be requested [global secondary indexes, the other index that dynamo supports, can at best be eventually consistent]. I will walk through an example for how to use local secondary indexes in dynamo using the AWS SDK 2.0 for Java, which has full reactive support, in this post.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set Time to Live [TTL] on DynamoDB Items using Java</title>
      <link>http://localhost:1313/blog/set-time-to-live-ttl-on-dynamodb-items-using-java/</link>
      <pubDate>Sun, 18 Oct 2020 13:43:39 +0000</pubDate>
      <guid>http://localhost:1313/blog/set-time-to-live-ttl-on-dynamodb-items-using-java/</guid>
      <description>&lt;p&gt;In this post, we&#39;ll demonstrate how &lt;a href=&#34;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html&#34;&gt;expiring items in DynamoDB&lt;/a&gt; works in java, using the AWS SDK 2.0+, which has full reactive support.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
