<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javadistributed Systemsreactivewebfluxlettuceredis on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/javadistributed-systemsreactivewebfluxlettuceredis/</link>
    <description>Recent content in Javadistributed Systemsreactivewebfluxlettuceredis on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sat, 01 May 2021 14:44:31 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javadistributed-systemsreactivewebfluxlettuceredis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Redis as a Distributed Lock with Lettuce</title>
      <link>http://localhost:1313/blog/using-redis-as-a-distributed-lock-with-lettuce/</link>
      <pubDate>Sat, 01 May 2021 14:44:31 +0000</pubDate>
      <guid>http://localhost:1313/blog/using-redis-as-a-distributed-lock-with-lettuce/</guid>
      <description>&lt;p&gt;The source code for this article &lt;a href=&#34;https://github.com/nfisher23/reactive-programming-webflux&#34;&gt;can be found on Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Using Redis as a best effort locking mechanism can be very useful in practice, to prevent two logical threads from clobbering each other. While redis locking is certainly not perfect, and &lt;a href=&#34;https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html&#34;&gt;you shouldn&#39;t use redis locking if the underlying operation can&#39;t be occasionally done twice&lt;/a&gt;, it can still be useful for that &amp;quot;best effort, do this once&amp;quot; use case.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pre Loading Lua Scripts into Clustered Redis with Lettuce</title>
      <link>http://localhost:1313/blog/pre-loading-lua-scripts-into-clustered-redis-with-lettuce/</link>
      <pubDate>Sun, 25 Apr 2021 17:37:07 +0000</pubDate>
      <guid>http://localhost:1313/blog/pre-loading-lua-scripts-into-clustered-redis-with-lettuce/</guid>
      <description>&lt;p&gt;The source code for what follows &lt;a href=&#34;https://github.com/nfisher23/reactive-programming-webflux&#34;&gt;can be found on github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In a previous article, we showed how to &lt;a href=&#34;https://nickolasfisher.com/blog/Pre-Loading-a-Lua-Script-into-Redis-With-Lettuce&#34;&gt;efficiently execute a lua script in redis using lettuce&lt;/a&gt;. To really scale our caching solution horizontally [and elegantly deal with many scaling headaches], we will also want to make sure we can execute our lua scripts against clustered redis, which as we&#39;ll see here is pretty straightforward.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
