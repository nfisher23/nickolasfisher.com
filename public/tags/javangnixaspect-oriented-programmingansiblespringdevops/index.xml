<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javangnixaspect Oriented ProgrammingansiblespringDevOps on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/javangnixaspect-oriented-programmingansiblespringdevops/</link>
    <description>Recent content in Javangnixaspect Oriented ProgrammingansiblespringDevOps on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sat, 13 Apr 2019 16:52:53 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javangnixaspect-oriented-programmingansiblespringdevops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How To Invalidate an Nginx Cache In a Reverse Proxy Setup With Spring MVC</title>
      <link>http://localhost:1313/blog/how-to-invalidate-an-nginx-cache-in-a-reverse-proxy-setup-with-spring-mvc/</link>
      <pubDate>Sat, 13 Apr 2019 16:52:53 +0000</pubDate>
      <guid>http://localhost:1313/blog/how-to-invalidate-an-nginx-cache-in-a-reverse-proxy-setup-with-spring-mvc/</guid>
      <description>&lt;p&gt;You can see the sample code associated with this post &lt;a href=&#34;https://github.com/nfisher23/some-ansible-examples/tree/master/reverse-proxy-nginx&#34;&gt;on Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In two previous posts, we looked at how to &lt;a href=&#34;https://nickolasfisher.com/blog/How-to-Deploy-a-Spring-MVC-Application-Behind-an-Nginx-Reverse-Proxy&#34;&gt;provision a reverse proxy using nginx&lt;/a&gt; and then &lt;a href=&#34;https://nickolasfisher.com/blog/How-to-Use-Nginxs-Caching-to-Improve-Site-Responsiveness&#34;&gt;how to add caching to the nginx reverse proxy&lt;/a&gt;. The implementation we ended up with at the end of the last post was a &amp;quot;dumb&amp;quot; cache, meaning that it doesn&#39;t know when or if any data gets updated&amp;ndash;it just times out after 60 seconds and then asks for a new payload from the application it&#39;s acting as proxy for.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
