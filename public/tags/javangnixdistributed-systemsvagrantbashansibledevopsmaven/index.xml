<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javangnixdistributed SystemsvagrantbashansibleDevOpsmaven on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/javangnixdistributed-systemsvagrantbashansibledevopsmaven/</link>
    <description>Recent content in Javangnixdistributed SystemsvagrantbashansibleDevOpsmaven on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sun, 25 Nov 2018 15:53:22 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javangnixdistributed-systemsvagrantbashansibledevopsmaven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Simple Zero Downtime Continuous Integration Pipeline for Spring MVC</title>
      <link>http://localhost:1313/blog/a-simple-zero-downtime-continuous-integration-pipeline-for-spring-mvc/</link>
      <pubDate>Sun, 25 Nov 2018 15:53:22 +0000</pubDate>
      <guid>http://localhost:1313/blog/a-simple-zero-downtime-continuous-integration-pipeline-for-spring-mvc/</guid>
      <description>&lt;p&gt;The sample code associated with what follows can be found &lt;a href=&#34;https://github.com/nfisher23/simple-cicd-pipeline-with-spring&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One of the biggest paradigm shifts in software engineering, since the invention of the computer and software that would run on it, was the idea of a MVR (minimum viable release) or MVP (minimum viable product). With the lack of internet access becoming the exception in developed countries, it becomes more and more powerful to put your product out there on display, and to design a way to continuously make improvements to it. In the most aggressive of circumstances, you want to be able to push something up to a source control server, then let an automated process perform the various steps required to actually deploy it in the real world. In the best case, you can achieve all of this with zero downtime&amp;ndash;basically, the users of your service are never inconvenienced by your decision to make a change. Setting up one very simple example of that is the subject of this post.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
