<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javaspringawsdynamodbwebflux on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/javaspringawsdynamodbwebflux/</link>
    <description>Recent content in Javaspringawsdynamodbwebflux on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sat, 18 Jul 2020 23:07:05 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javaspringawsdynamodbwebflux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DynamoDB and Spring Boot Webflux - A Working Introduction</title>
      <link>http://localhost:1313/blog/dynamodb-and-spring-boot-webflux-a-working-introduction/</link>
      <pubDate>Sat, 18 Jul 2020 23:07:05 +0000</pubDate>
      <guid>http://localhost:1313/blog/dynamodb-and-spring-boot-webflux-a-working-introduction/</guid>
      <description>&lt;p&gt;The source code for this post &lt;a href=&#34;https://github.com/nfisher23/webflux-and-dynamo&#34;&gt;can be found on Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/welcome.html&#34;&gt;latest AWS SDK for java&lt;/a&gt; uses a reactive client to send requests to various AWS services, including DynamoDB. Reactive programming is ultimately more robust at the edges&amp;ndash;once you start experiencing latency anywhere in your stack, if your tech is not reactive, you&#39;re going to have a significantly worse time than if it were.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
