<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaspringDevOpsmaven on Nick Fisher&#39;s tech blog</title>
    <link>http://localhost:1313/tags/javaspringdevopsmaven/</link>
    <description>Recent content in JavaspringDevOpsmaven on Nick Fisher&#39;s tech blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>2018-{year}</copyright>
    <lastBuildDate>Sat, 24 Nov 2018 15:51:32 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/javaspringdevopsmaven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use Spring&amp;#39;s Dependency Injection in Setup And Teardown Code For Integration Tests With Maven</title>
      <link>http://localhost:1313/blog/how-to-use-springs-dependency-injection-in-setup-and-teardown-code-for-integration-tests-with-maven/</link>
      <pubDate>Sat, 24 Nov 2018 15:51:32 +0000</pubDate>
      <guid>http://localhost:1313/blog/how-to-use-springs-dependency-injection-in-setup-and-teardown-code-for-integration-tests-with-maven/</guid>
      <description>&lt;p&gt;You can view the sample code for this repository &lt;a href=&#34;https://github.com/nfisher23/integration-testing-postgres-and-spring&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In our last post on &lt;a href=&#34;https://nickolasfisher.com/blog/How-to-Run-Integration-Tests-with-Setup-and-Teardown-Code-in-Maven-Build&#34;&gt;Using Maven to Setup and Teardown Integration Tests&lt;/a&gt;, we saw how to run Java code before and after our integration tests to setup and teardown any data that our tests depended on. What if we are using Spring, and we want to use our ApplicationContext, and its dependency injection/property injection features? After all, we would be testing the configuration for our specific application more than anything else, so we should be certain to use it in our setup and teardown code.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
